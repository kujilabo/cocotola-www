import React from 'react';
// import { useParams } from 'react-router-dom';
// import { Button, Card, Container, Divider, Header } from 'semantic-ui-react';
import { Container } from 'semantic-ui-react';

// import { AudioButton, ErrorMessage } from '../../../../../../components';
// import { EnglishWordMemorizationBreadcrumb } from './EnglishWordMemorizationBreadcrumb';
import { WorkbookModel } from '../../../../../../models/workbook';
import '../../../../../../App.css';

type ParamTypes = {
  _workbookId: string;
};
const EnglishWordMemorizationAnswer: React.FC<EnglishWordMemorizationAnswerProps> = (
  props: EnglishWordMemorizationAnswerProps
) => {
  // const { _workbookId } = useParams<ParamTypes>();

  // if (props.failed || props.workbook.problems.length === 0) {
  //   return <div>Failed</div>;
  // }

  // const problem = props.workbook.problems[props.index];
  // const loadAndPlay = (postFunc: (value: string) => void) => {
  //   props.getAudio(problem.properties['audioId'], problem.updatedAt, postFunc);
  // };

  // const selfCheckWorng = () =>
  //   props.selfCheckWrong(props.workbook.id, problem.id, 1);

  // const selfChheckCorrect = () =>
  //   props.selfCheckCorrect(props.workbook.id, problem.id, 1);

  return (
    <Container fluid>
      {/* <EnglishWordMemorizationBreadcrumb
        name={props.workbook.name}
        id={+_workbookId}
      />
      <Divider hidden />
      <Card className="full-width">
        <Card.Content>
          <Header component="h2">A {problem.number}</Header>
        </Card.Content>
        <Card.Content>
          <Header component="h2">{problem.properties['translated']}</Header>

          <AudioButton loadAndPlay={loadAndPlay} />
        </Card.Content>
        <Card.Content extra>
          <div className="ui two buttons">
            <Button basic color="red" onClick={selfCheckWorng}>
              Wrong
            </Button>
            <Button basic color="green" onClick={selfChheckCorrect}>
              Correct
            </Button>
          </div>
        </Card.Content>
      </Card>
      <ErrorMessage message={props.errorMessage} /> */}
    </Container>
  );
};

type EnglishWordMemorizationAnswerProps = {
  loading: boolean;
  failed: boolean;
  workbook: WorkbookModel;
  index: number;
  errorMessage: string;

  selfCheckWrong: (
    workbookId: number,
    problemId: number,
    studyTypeId: number
  ) => void;
  selfCheckCorrect: (
    workbookId: number,
    problemId: number,
    studyTypeId: number
  ) => void;
  getAudio: (
    id: number,
    timestamp: string,
    postFunc: (value: string) => void
  ) => any;
};
